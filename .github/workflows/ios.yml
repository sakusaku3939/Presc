name: iOS CI/CD

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types: [ closed ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: show Xcode version
        run: xcodebuild -version
        
      - name: install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'
          
      - name: cache flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
            
      - name: setup env file
        if: env.BASE64_ENV_FILE != ''
        env:
          BASE64_ENV_FILE: ${{ secrets.BASE64_ENV_FILE }}
        run: echo $BASE64_ENV_FILE | base64 --decode > .env
        
      - name: flutter dependencies install
        run: flutter pub get
        
      - run: flutter test
      
      - name: import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}

      - name: import Provisioning Profile
        env:
          PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
          SHARE_EXTENSION_PROVISIONING_PROFILE: ${{ secrets.SHARE_EXTENSION_PROVISIONING_PROFILE }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          touch ~/Library/MobileDevice/Provisioning\ Profiles/decoded.mobileprovision
          touch ~/Library/MobileDevice/Provisioning\ Profiles/decoded-share-extension.mobileprovision
          echo -n $PROVISIONING_PROFILE | base64 -d -o ~/Library/MobileDevice/Provisioning\ Profiles/decoded.mobileprovision
          echo -n $SHARE_EXTENSION_PROVISIONING_PROFILE | base64 -d -o ~/Library/MobileDevice/Provisioning\ Profiles/decoded-share-extension.mobileprovision
          
      - name: import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}
          
      - name: import Export Options
        env:
          EXPORT_OPTIONS: ${{ secrets.EXPORT_OPTIONS }}
        run: echo -n $EXPORT_OPTIONS >> ExportOptions.plist
        
      - run: flutter build ipa --export-options-plist=ExportOptions.plist
      
      - name: distribute iOS app
        env:
          DEPLOYGATE_API_KEY: ${{ secrets.DEPLOYGATE_API_KEY }}
          IOS_DISTRIBUTION_HASH: ${{ secrets.IOS_DISTRIBUTION_HASH }}
          DEPLOYGATE_USER: ${{ secrets.DEPLOYGATE_USER }}
        run: |
          GIT_HASH=$(git rev-parse --short $GITHUB_SHA)
          GIT_BRANCH=${GITHUB_REF##*/}
          curl \
            -H "Authorization: token $DEPLOYGATE_API_KEY" \
            -F "file=@/Users/runner/work/Presc/Presc/build/ios/ipa/Presc.ipa" \
            -F "message=git:$GIT_HASH" \
            -F "distribution_name=$GIT_BRANCH" \
            -F "release_note=new ios build" \
            -F "distribution_key=$IOS_DISTRIBUTION_HASH" \
            "https://deploygate.com/api/users/$DEPLOYGATE_USER/apps"
