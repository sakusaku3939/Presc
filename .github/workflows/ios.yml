name: iOS CI/CD

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types: [ closed ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: show Xcode version
        run: xcodebuild -version
        
      - name: install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'
          
      - name: cache flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
            
      - name: setup env file
        env:
          BASE64_ENV_FILE: ${{ secrets.BASE64_ENV_FILE }}
        run: echo $BASE64_ENV_FILE | base64 --decode > .env
        
      - name: flutter dependencies install
        run: flutter pub get
        
      - run: flutter test

      - name: setup GithubActionsExportOptions.plist
        env:
          BASE64_EXPORT_OPTIONS: ${{ secrets.BASE64_EXPORT_OPTIONS }}
        run: echo -n "$BASE64_EXPORT_OPTIONS" | base64 --decode > ios/GithubActionsExportOptions.plist

      - name: build iOS app with flutter-build-ios
        uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: flutter build ipa --release --export-options-plist=ios/GithubActionsExportOptions.plist
          certificate-base64: ${{ secrets.CERTIFICATES_P12 }}
          certificate-password: ${{ secrets.CERTIFICATE_PASSWORD }}
          provisioning-profile-base64: ${{ secrets.BASE64_PROVISIONING_PROFILE }}
          keychain-password: ${{ secrets.IOS_GITHUB_KEYCHAIN_PASSWORD }}
      
      - name: distribute iOS app
        env:
          DEPLOYGATE_API_KEY: ${{ secrets.DEPLOYGATE_API_KEY }}
          IOS_DISTRIBUTION_HASH: ${{ secrets.IOS_DISTRIBUTION_HASH }}
          DEPLOYGATE_USER: ${{ secrets.DEPLOYGATE_USER }}
        run: |
          GIT_HASH=$(git rev-parse --short $GITHUB_SHA)
          GIT_BRANCH=${GITHUB_REF##*/}
          curl \
            -H "Authorization: token $DEPLOYGATE_API_KEY" \
            -F "file=@build/ios/ipa/Presc.ipa" \
            -F "message=git:$GIT_HASH" \
            -F "distribution_name=$GIT_BRANCH" \
            -F "release_note=new ios build" \
            -F "distribution_key=$IOS_DISTRIBUTION_HASH" \
            "https://deploygate.com/api/users/$DEPLOYGATE_USER/apps"
