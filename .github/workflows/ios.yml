name: iOS CI/CD

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types: [ closed ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: show Xcode version
        run: xcodebuild -version
        
      - name: install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'
          
      - name: cache flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
            
      - name: setup env file
        env:
          BASE64_ENV_FILE: ${{ secrets.BASE64_ENV_FILE }}
        run: echo $BASE64_ENV_FILE | base64 --decode > .env
        
      - name: flutter dependencies install
        run: flutter pub get
        
      - run: flutter test

      - name: import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}
          keychain: build_keychain

      - name: import Provisioning Profiles
        env:
          BASE64_PROVISIONING_PROFILE: ${{ secrets.BASE64_PROVISIONING_PROFILE }}
          BASE64_SHARE_EXTENSION_PROVISIONING_PROFILE: ${{ secrets.BASE64_SHARE_EXTENSION_PROVISIONING_PROFILE }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          
          echo -n "$BASE64_PROVISIONING_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/main.mobileprovision
          echo -n "$BASE64_SHARE_EXTENSION_PROVISIONING_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/share.mobileprovision
          
          MAIN_UUID=$(security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/main.mobileprovision | plutil -extract UUID xml1 - -o - | sed -n 's/.*<string>\(.*\)<\/string>.*/\1/p')
          SHARE_UUID=$(security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/share.mobileprovision | plutil -extract UUID xml1 - -o - | sed -n 's/.*<string>\(.*\)<\/string>.*/\1/p')
          
          mv ~/Library/MobileDevice/Provisioning\ Profiles/main.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$MAIN_UUID.mobileprovision
          mv ~/Library/MobileDevice/Provisioning\ Profiles/share.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$SHARE_UUID.mobileprovision
          
      - name: import Export Options
        env:
          BASE64_EXPORT_OPTIONS: ${{ secrets.BASE64_EXPORT_OPTIONS }}
        run: echo -n "$BASE64_EXPORT_OPTIONS" | base64 --decode > ExportOptions.plist
        

      - name: configure manual signing
        run: |
          sed -i '' 's/ProvisioningStyle = Automatic;/ProvisioningStyle = Manual;/g' ios/Runner.xcodeproj/project.pbxproj
          
      - name: build iOS app
        run: |
          flutter clean
          flutter pub get
          cd ios && pod install
          cd ..
          flutter build ios --release --no-codesign
          
      - name: archive and export IPA
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -sdk iphoneos \
            -configuration Release \
            archive \
            -archivePath build/ios/iphoneos/Runner.xcarchive
          
          xcodebuild -exportArchive \
            -archivePath build/ios/iphoneos/Runner.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build/ios/iphoneos/
      
      - name: distribute iOS app
        env:
          DEPLOYGATE_API_KEY: ${{ secrets.DEPLOYGATE_API_KEY }}
          IOS_DISTRIBUTION_HASH: ${{ secrets.IOS_DISTRIBUTION_HASH }}
          DEPLOYGATE_USER: ${{ secrets.DEPLOYGATE_USER }}
        run: |
          GIT_HASH=$(git rev-parse --short $GITHUB_SHA)
          GIT_BRANCH=${GITHUB_REF##*/}
          curl \
            -H "Authorization: token $DEPLOYGATE_API_KEY" \
            -F "file=@build/ios/iphoneos/Presc.ipa" \
            -F "message=git:$GIT_HASH" \
            -F "distribution_name=$GIT_BRANCH" \
            -F "release_note=new ios build" \
            -F "distribution_key=$IOS_DISTRIBUTION_HASH" \
            "https://deploygate.com/api/users/$DEPLOYGATE_USER/apps"
